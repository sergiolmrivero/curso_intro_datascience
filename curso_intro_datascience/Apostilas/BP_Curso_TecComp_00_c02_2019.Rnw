
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%    CAPITULO
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% !Rnw root = BP_Curso_TecComp_00_2019.Rnw
\SweaveOpts{concordance=TRUE, echo=FALSE, eval=TRUE}

		
\chapter{Aula 2 - Acessando e Utilizando Bases de Dados}

Apresentar o conceito de Dataframe, os tipos de dados utilizados no R e os principais comandos  

\section{O ciclo de tratamento e análise de dados}

\section{Tipos de Dados em R}

Os tipos de dados do R incluem: dados escalares, vetores, matrizes, listas e quadro de dados.

\subsection{Escalares}
Determinada variável pode ser um escalar, ou seja, simplesmente um número:

Exemplo de escalares:
<<echo=TRUE>>=
a <- 2
b <- 2*a
a
b
@

\subsection{Vetores}
O vetor é um objeto matemático caracterizado em um conjunto de segmentos orientdos de reta que possuem o mesmo módulo, direção e sentido. Ele contêm elementos de classes diferentes, conforme apresentado abaixo:


Vetor de classe numérica:
<<echo=TRUE>>=
a <- c(1,3500,5.3,543,-2,4000)
@
Vetor de classe de caractér:
<<echo=TRUE>>=
b <- c("taxa de juros","taxa de câmbio","reservas bancárias") 
@
Vetor de classe lógica:
<<echo=TRUE>>=
c <- c(FALSE,TRUE,FALSE,TRUE) 
@
\subsection{Matrizes}
São compostas por linhas (valores ordenados na horizontal) representadas pela letra "m" e colunas (valores ordenados na vertical) representadas pela letra "n", onde os dados são convertidos segundo essas disposições.
<<echo=TRUE>>=
matriz <- matrix(data=1:16,nrow=4,ncol=4)
matriz
@
Onde:
       \begin{description}
       \item [data:] parâmetro que representa os dados usados para criar matriz;
       \item [nrow:] parâmetro para número de linhas;
       \item [ncol:] parâmetro para número de colunas.
       \end{description}

\subsection{Array}

O dado pode ser um \textbf{Array}. Essa estrutura de dados possui três dimensões, as linhas, as colunas e as camadas. 

Exemplo de Array:
<<echo=true>>=
cubo <- array(data = 1:27, dim=c(3,3,3))
cubo
@

       \begin{description}
       \item [data:] parâmetro que representa os dados usados para criar matriz;
       \item [dim:] parâmetro para determinar as dimensões do array, sendo \textbf{dim} um vetor;
       \end{description}

\url{https://www.statmethods.net/input/datatypes.html}

\url{https://swcarpentry.github.io/r-novice-inflammation/13-supp-data-structures/}

\url{https://www.tutorialspoint.com/r/r_data_types.htm}

\url{http://www.r-tutor.com/r-introduction/basic-data-types}

\url{https://www.cyclismo.org/tutorial/R/types.html}

\url{https://stat.ethz.ch/R-manual/R-devel/library/base/html/typeof.html}

\section{Dataframes}

Data frame é uma formatação de tabela presente no R que comporta duas dimensões. A primeira dimensão compreende as linhas(Observações) e a segunda dimensão compreende as colunas(variáveis). 

Vetor dos meses:
<<echo=true>>=
DATA <- c("ago/2018", "set/2018", "out/2018", 
          "nov/2018", "dez/2018", "jan/2019")
DATA
@

Vetor do IPCA para os respectivos meses do vetor DATA:
<<echo=true>>=
IPCA <- c(-0.09, 0.48, 0.45, -0.21, 0.15, 0.32)
IPCA
@

Vetor do Pib mensal em milhões(R\$) para os respectivos meses do vetor DATA:
<<echo=true>>=
PIBmensalMilhoes <- c(583011.3, 551215.6, 597218.7,
                      604073.9, 624464.1, 591715.7)
PIBmensalMilhoes
@

\newpage

Unimos os três vetores criados anteriormente em uma única estrutura de dados e conseguinte transformamos essa estrutura em um dataframe por meio dos comandos a baixo:
<<echo=true>>=
Dados <- data.frame(cbind(DATA, IPCA, PIBmensalMilhoes))
Dados
@



\url{https://www.tutorialspoint.com/r/r_data_frames.htm}

\url{https://www.datamentor.io/r-programming/data-frame/}

\url{http://www.r-tutor.com/r-introduction/data-frame}

\url{https://stat.ethz.ch/R-manual/R-devel/library/base/html/data.frame.html}

\url{https://www.tutorialgateway.org/data-frame-in-r/}

\url{https://datacarpentry.org/R-ecology-lesson/02-starting-with-data.html}

\url{https://www.statmethods.net/input/importingdata.html}

\section{Acessando Arquivos no computador}

\url{https://www.datacamp.com/community/tutorials/r-data-import-tutorial?utm_source=adwords_ppc&utm_campaignid=1455363063&utm_adgroupid=65083631748&utm_device=c&utm_keyword=&utm_matchtype=b&utm_network=g&utm_adpostion=1t1&utm_creative=332602034364&utm_targetid=dsa-473406573035&utm_loc_interest_ms=&utm_loc_physical_ms=1001610&gclid=Cj0KCQiA5NPjBRDDARIsAM9X1GLkgYWekNMkjHQnsTnRAzV7_gVEiwAqyW9CPisvAqFv2mNXzwarSlIaAgdZEALw_wcB}

\url{http://rprogramming.net/read-csv-in-r/}

\url{https://www.rdocumentation.org/packages/gdata/versions/2.18.0/topics/read.xls}

\url{https://stat.ethz.ch/R-manual/R-devel/library/utils/html/read.fwf.html}

\url{https://riptutorial.com/r/example/31447/importing-fixed-width-files}


\section{Acessando Bases de dados via \textit{APIs}}

\url{https://www.r-bloggers.com/accessing-apis-from-r-and-a-little-r-programming/}

\url{https://cran.r-project.org/web/packages/httr/vignettes/api-packages.html}

\url{https://zapier.com/learn/apis/}

\url{https://www.earthdatascience.org/courses/earth-analytics/get-data-using-apis/API-data-access-r/}



\section{Trabalhando com bases de dados muito grandes}

\url{http://dept.stat.lsa.umich.edu/~jerrick/courses/stat701/notes/sql.html}

\url{https://datacarpentry.org/R-ecology-lesson/05-r-and-databases.html}

\url{https://db.rstudio.com/}

\url{http://www.columbia.edu/~sjm2186/EPIC_R/EPIC_R_BigData.pdf}

\url{https://www.rstudio.com/resources/webinars/working-with-big-data-in-r/}

\url{https://rpubs.com/msundar/large_data_analysis}






