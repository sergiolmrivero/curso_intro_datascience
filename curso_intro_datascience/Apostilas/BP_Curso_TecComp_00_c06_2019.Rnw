
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%    CAPITULO
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% !Rnw root = BP_Curso_TecComp_00_2019.Rnw
\SweaveOpts{concordance=TRUE, echo=TRUE, eval=TRUE}


\chapter{Gráficos em R}

	\section{ggplot}
	O pacote \textbf{ggplot2} é uma ferramenta de visualização gráfica bastante útil para apresentação de dados com muitos componentes. A estrutura de construção de gráficos utilizando o ggplot2 é basicamente definir os dados a serem plotados e o sistema de coordenadas. Uma boa forma de entender como funciona o \textbf{ggplot2} é por meio da metáfora de camadas. Cada detalhe do gráfico é uma camada de comando definido a partir das camadas principais(dados e coordenadas).
	
	A figura \ref{fig:f06-01} mostra cada camada do processo de construção de gráficos utilizando o ggplot2 
	
	\begin{figure}[htpb]
		\centering
		\includegraphics[width=0.7\linewidth]{../figs/BP_Curso_TecComp_00_2019_f06-01}
		\caption{Camadas do ggplot2}
		\label{fig:f06-01}
	\end{figure}

Abaixo estão as descrições de cada camada da figura \ref{fig:f06-01}

\begin{description}
	\item [Data:] Base de dados que será utilizada;
	\item [Asthetics:] Definição do conjunto de dados que a comporão o gráfico, bem como a posição de cada dado;
	\item [Scale:] Difinição dos escala dos valores do gráfico;
	\item [Objeto Geométrico:] Definição da geometria do gráfico;
	\item [Statistics:] Estatística descritiva dos dados utilizados para gerar o gráfico;
	\item [Facets:] Criação de subplots(divisão da janela de plots);
	\item [Sistema de Coordenada:] Definição do sistema de coordenadas.
\end{description}

Para os exemplos do pacote \textbf{ggplot2} utilizaremos o dataset Iris. Essa base de dados possui 5 variáveis que são:

\begin{description}
	\item [Sepal.Length:] Comprimento da sépala;
	\item [Petal.Length:] Comprimento da pétala;
	\item [Sepal.Width:] Largura da sépala;
	\item [Petal.Width:] Largura da pétala;
	\item [Species:] Espécias da plantas. 
\end{description}

<<eval=TRUE, echo=TRUE>>=
data("iris")
head(iris)
@

O primeiro gráfico apresentará a relação entre o comprimento da pétala e da sépala como pode ser visto na figura \ref{fig:f06-04}.


\begin{figure}[htpb]
	\centering
	\includegraphics[width=0.7\linewidth]{../figs/BP_Curso_TecComp_00_2019_f06-04}
	\caption{Relação de pontos entre os comprimentos Pétala e Sépala}
	\label{fig:f06-04}
\end{figure}

\newpage

Os comandos para gerar o gráfico são:

<<eval=FALSE,echo=TRUE>>=
g1 <- ggplot(iris, aes(x = Sepal.Length, y = Petal.Length)) + 
geom_point() +
ggtitle("Relação entre tamanho da Pétala e o tamanho da Sépala") +
labs(x="Tamanho da Sépala", y="Tamanho da Pétala")
plot(g1)
@

O objeto \textbf{g1} recebe a função que trata do acesso a base aos dados \textbf{iris} e a definição da posição das variáveis. Tal função está descrita abaixo:

<<eval=FALSE,echo=TRUE>>=
g1 <- ggplot(iris, aes(x = Sepal.Length, y = Petal.Length))
#iris indica a base de dados e aes() indica a posição das variáveis
@

 próxima camada indica qual é a geometria do gráfico. Tal função é dada por:

<<eval=FALSE,echo=TRUE>>=
geom_point()
@

As próximas camadas apresentam apenas títulos e legendas presentes nos gráficos, além da função plot para apresentar o gráfico na região de plot do \textbf{Rstudio}

<<eval=FALSE,echo=TRUE>>=
ggtitle("Relação entre tamanho da Pétala e o tamanho da Sépala") +
labs(x="Tamanho da Sépala", y="Tamanho da Pétala")
plot(g1)
@

É possível incluir mais de uma geometria no gráfico.

\begin{figure}[htpb]
	\centering
	\includegraphics[width=0.7\linewidth]{../figs/BP_Curso_TecComp_00_2019_f06-05}
	\caption{Relação de comprimento entre Pétala e Sépala}
	\label{fig:f06-05}
\end{figure}

Para fazer o gráfico da figura \ref{fig:f06-05} podemos utilizar os comandos abaixo:

<<eval=FALSE,echo=TRUE>>=
g2 <- ggplot(iris, aes(x = Sepal.Length, y = Petal.Length)) + 
geom_point() +
geom_smooth() +
ggtitle("iris") +
labs(x="Sepal length", y="Petal Length")
plot(g2)
@

Podemos fazer uma separação por variáveis categóricas e apresentá-las com cores distintas. Na \textbf{aes()} adicionamos o parâmetro $color = Species$. Para o nosso exemplo, a variável categórica é \textbf{Species}.

\begin{figure}[htpb!]
	\centering
	\includegraphics[width=0.7\linewidth]{../figs/BP_Curso_TecComp_00_2019_f06-06}
	\caption{Relação de comprimento e largura das Sépalas}
	\label{fig:f06-06}
\end{figure}


O exemplo para construir a figura \ref{fig:f06-06} está exemplificado abaixo:

<<eval= FALSE, echo=TRUE>>=
g3 <- ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, color = Species)) + 
geom_point() +
ggtitle("Relação entre comprimento e largura das sépalas por espécie") +
labs(x="Comprimento da Sépala", y="Largura da Sépala", color = "Espécie")
plot(g3)
@

Podemos incluir mais uma camada e criar vários ambientes de plot dividindo o ambiente principal. Para que isso seja possível utilizaremos a função \textbf{facet.wrap()}.

\begin{figure}[htpb!]
	\centering
	\includegraphics[width=0.7\linewidth]{../figs/BP_Curso_TecComp_00_2019_f06-07}
	\caption{Relação entre comprimento e largura das sépalas por espécie}
	\label{fig:f06-07}
\end{figure}

O código para gerar o gráfico da figura \ref{fig:f06-07} está exposto abaixo:

<<eval=FALSE,echo=TRUE>>=
gf4 <- ggplot(iris, aes(x = Sepal.Length, y = Sepal.Width, color = Species)) + 
geom_point() +
facet_wrap(~Species) +
ggtitle("Relação entre o comprimento e a largura das sépalas") +
labs(x="Comprimento da Sépala", y="Largura da Sépala", color = "Espécie")
plot(gf4)
@

\newpage

Percebam que na figura \ref{fig:f06-07} utilizamos a mesma variável para o parâmetro \textbf{color} e para o parâmetro \textbf{facet\_wrap}. Em um novo exemplo usando a base de dados \textbf{mpg}, utilizaremos os dois parâmetros citados anteriormente, mas com variáveis distintas para cada um.

\begin{figure}[htpb!]
	\centering
	\includegraphics[width=0.7\linewidth]{../figs/BP_Curso_TecComp_00_2019_f06-08}
	\caption{Autonomia de combustível de veículos}
	\label{fig:f06-08}
\end{figure}

O código que gera a figura \ref{fig:f06-08} está escrito abaixo:

<<eval=false,echo=true>>=
gf8 <- ggplot(mpg, aes(x = cty, y = hwy, color = class)) + 
geom_point() +
geom_line() +
facet_wrap(~manufacturer) +
ggtitle("Autonomia de combustível por Companhia e modelo de veículo") +
labs(x="Milhas por galão na cidade", y="Milhas por galão na estrada")
plot(gf8)
@

É possível adicionar os tamanhos dos pontos pra indicar o impacto de outra variável. Para fazer isso basta adicionar uma camada na função \textbf{geom\_point(size $=$ cyl)}. O código fica da seguinte forma:

<<eval=false, echo=true>>=
gf9 <- ggplot(mpg, aes(x = cty, y = hwy, color = class)) +
geom_point(aes(size = cyl)) +
geom_line() +
facet_wrap(~year) +
ggtitle("Autonomia de combustível") +
labs(x="Autonomia na Cidade", y="Autonomia na Estrada",
color = "Classe do Veículo", size = "Cilindro")
plot(gf9)
@

É possível determinar novas posições para as legendas. Para o nosso exemplo, as legendas serão movidas para baixo:

<<eval=false, echo=true>>=
gf11 <- ggplot(mpg, aes(x = cty, y = hwy, color = class)) +
geom_point() +
geom_line() +
facet_wrap(~year) +
ggtitle("Autonomia de combustível") +
labs(x="Autonomia na Cidade", y="Autonomia na Estrada",
color = "Classe do Veículo", size = "Cilindro") +
theme(legend.position = "bottom") # "bottom", "top", "lef", ou "right" 
plot(gf11)
@

Por último, podemos mudar o tema dos gráficos, para isso adicionamos uma nova camada:

<<eval=false, echo=true>>=
gf10 <- ggplot(mpg, aes(x = cty, y = hwy, color = class)) +
geom_point() +
geom_line() +
facet_wrap(~year) +
ggtitle("Autonomia de combustível") +
labs(x="Autonomia na Cidade", y="Autonomia na Estrada",
color = "Classe do Veículo", size = "Cilindro") +
theme_minimal() 
plot(gf10)
@

Todos os temas disponíveis podem ser checados em \url{https://ggplot2.tidyverse.org/reference/ggtheme.html}

